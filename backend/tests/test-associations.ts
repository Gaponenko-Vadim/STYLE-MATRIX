// tests/test-associations.ts
import sequelize from "../config/db";
import { setupAssociations } from "../models/associations";

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
import "../models/User";
import "../models/Avatar";
import "../models/Clothing";
import "../models/Clothing_Sizes"; // ‚Üê –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
import "../models/Clothing_3D_Models"; // ‚Üê –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
import "../models/UserWardrobe";
import "../models/Rating";
import "../models/Chat";
import "../models/Avatar_Outfits"; // ‚Üê –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
import "../models/AvatarTryOn";
import "../models/Type";
import "../models/Brand";

async function testAssociations() {
  try {
    await sequelize.authenticate();
    console.log("‚úÖ Database connected");

    setupAssociations();
    console.log("‚úÖ Associations setup complete");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –º–æ–¥–µ–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã
    console.log("\nüìä All registered models:");
    const modelNames = Object.keys(sequelize.models);
    console.log(modelNames.map((name) => `‚úÖ ${name}`).join("\n"));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤—è–∑–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
    for (const modelName of modelNames) {
      const model = (sequelize as any).models[modelName];
      if (model && model.associations) {
        console.log(`\nüîó ${modelName} associations:`);
        const associations = Object.keys(model.associations).map((key) => ({
          association: key,
          type: model.associations[key].associationType,
          target: model.associations[key].target.name,
        }));
        console.log(associations);
      }
    }

    console.log("\nüéâ –í—Å–µ —Å–≤—è–∑–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!");
  } catch (error) {
    console.error("‚ùå Error:", error);
  } finally {
    await sequelize.close();
  }
}

testAssociations();
